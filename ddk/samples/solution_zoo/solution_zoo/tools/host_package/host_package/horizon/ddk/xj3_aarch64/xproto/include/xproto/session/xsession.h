/*!
 * -------------------------------------------
 * Copyright (c) 2019, Horizon Robotics, Inc.
 * All rights reserved.
 * \File     xsession.h
 * \Author   Xudong Du
 * \Mail     Xudong.du@horizon.ai
 * \Version  1.0.0.0
 * \Date     2021-04-09
 * \Brief    interface for user
 * \DO NOT MODIFY THIS COMMENT, \
 * \WHICH IS AUTO GENERATED BY EDITOR
 * -------------------------------------------
 */

#ifndef XPROTO_INCLUDE_XPROTO_SESSION_XSESSION_PUBLIC_H_
#define XPROTO_INCLUDE_XPROTO_SESSION_XSESSION_PUBLIC_H_

#include <iostream>
#include <string>
#include <vector>

#include "xproto/version.h"
#include "xproto/session/xsession_info.h"

namespace xproto {

class XPROTO_EXPORT XSession {
 public:
  XSession() {}
  ~XSession();
  /**
   * @description: Set as master device and set session to master mode. If the
   * messages generated by this plugin need to flow to the plugin on another
   * device, you can set the device to master mode. This interface uses ZMQ by
   * default and binds to localhost.
   * @param {uint16_t} listenting port
   * @return {*} zero:success non-zero:failure
   */
  int32_t AsMaster(uint16_t host_port);
  /**
   * @description: Connect to master device and set session to slave mode. If
   * you want to subscribe to Plugin messages on other devices, you need to
   * connect to other devices first, and then subscribe to the corresponding
   * messages. If connected to master device, Specified messages can flow
   * between devices.
   * @param {std::string} master device IP
   * @param {uint16_t} dst port
   * @return {*} zero:success non-zero:failure
   */
  int32_t ConnectTo(const std::string &ip, uint16_t port);
  /**
   * @description: Set as master device and set session to master mode. If the
   * messages generated by this plugin need to flow to the plugin on another
   * device, you can set the device to master mode.Detailed SessionConfig
   * information is required to use this interface.
   * @param {std::string} json config, 
   * @return {*} zero:success non-zero:failure
   */
  int32_t AsMaster(const std::string &config_param);
  /**
   * @description: Connect to master device and set session to slave mode. If
   * you want to subscribe to Plugin messages on other devices, you need to
   * connect to other devices first, and then subscribe to the corresponding
   * messages. If connected to master device, Specified messages can flow
   * between devices.Detailed SessionConfig information is required to use this
   * interface.
   * @param {std::string} client session config
   * @return {*} zero:success non-zero:failure
   */
  int32_t ConnectTo(const std::string &config_param);
  /**
   * @description: Query Session messages
   * @param None
   * @return {*} return Info of plugin session info.
   */
  std::vector<SessionInfo> Info();
  /**
   * @description: reset Session to default Local Mode
   * @param None
   * @return None
   */
  void Reset();
  /**
   * @description: return XSession instance
   * @param None
   * @return XSession&
   */
  static XSession &Instance();
};
}  // namespace xproto

#endif  // XPROTO_INCLUDE_XPROTO_SESSION_XSESSION_PUBLIC_H_
