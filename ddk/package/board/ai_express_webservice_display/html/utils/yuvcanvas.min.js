(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a){return a(o,!0)}if(i){return i(o,!0)}var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++){s(r[o])}return s})({1:[function(require,module,exports){module.exports={vertex:"precision lowp float;\n\nattribute vec2 aPosition;\nattribute vec2 aLumaPosition;\nattribute vec2 aChromaPosition;\nvarying vec2 vLumaPosition;\nvarying vec2 vChromaPosition;\nvoid main() {\n    gl_Position = vec4(aPosition, 0, 1);\n    vLumaPosition = aLumaPosition;\n    vChromaPosition = aChromaPosition;\n}\n",fragment:"// inspired by https://github.com/mbebenita/Broadway/blob/master/Player/canvas.js\n\nprecision lowp float;\n\nuniform sampler2D uTextureY;\nuniform sampler2D uTextureCb;\nuniform sampler2D uTextureCr;\nvarying vec2 vLumaPosition;\nvarying vec2 vChromaPosition;\nvoid main() {\n   // Y, Cb, and Cr planes are uploaded as LUMINANCE textures.\n   float fY = texture2D(uTextureY, vLumaPosition).x;\n   float fCb = texture2D(uTextureCb, vChromaPosition).x;\n   float fCr = texture2D(uTextureCr, vChromaPosition).x;\n\n   // Premultipy the Y...\n   float fYmul = fY * 1.1643828125;\n\n   // And convert that to RGB!\n   gl_FragColor = vec4(\n     fYmul + 1.59602734375 * fCr - 0.87078515625,\n     fYmul - 0.39176171875 * fCb - 0.81296875 * fCr + 0.52959375,\n     fYmul + 2.017234375   * fCb - 1.081390625,\n     1\n   );\n}\n",vertexStripe:"precision lowp float;\n\nattribute vec2 aPosition;\nattribute vec2 aTexturePosition;\nvarying vec2 vTexturePosition;\n\nvoid main() {\n    gl_Position = vec4(aPosition, 0, 1);\n    vTexturePosition = aTexturePosition;\n}\n",fragmentStripe:"// extra 'stripe' texture fiddling to work around IE 11's poor performance on gl.LUMINANCE and gl.ALPHA textures\n\nprecision lowp float;\n\nuniform sampler2D uStripe;\nuniform sampler2D uTexture;\nvarying vec2 vTexturePosition;\nvoid main() {\n   // Y, Cb, and Cr planes are mapped into a pseudo-RGBA texture\n   // so we can upload them without expanding the bytes on IE 11\n   // which doesn't allow LUMINANCE or ALPHA textures\n   // The stripe textures mark which channel to keep for each pixel.\n   // Each texture extraction will contain the relevant value in one\n   // channel only.\n\n   float fLuminance = dot(\n      texture2D(uStripe, vTexturePosition),\n      texture2D(uTexture, vTexturePosition)\n   );\n\n   gl_FragColor = vec4(fLuminance, fLuminance, fLuminance, 1);\n}\n"}},{}],2:[function(require,module,exports){(function(){var YUVBuffer=require("yuv-buffer"),YUVCanvas=require("./../src/yuv-canvas.js");var YCbCr=require("./YCbCr.js");function setupFrame(){format=YUVBuffer.format({width:640,height:480,chromaWidth:320,chromaHeight:240});frame=YUVBuffer.frame(format)}function crop(frame,x,y,width,height){x=x<0?0:x;x=x>=frame.format.width?frame.format.width-1:x;width=frame.format.width-1-x<width?frame.format.width-x-1:width;height=frame.format.height-1-y<height?frame.format.height-1-y:height;if(width%2!=0){width=width-1}if(height%2!=0){height=height-1}if(width<=0||height<=0){return null}var minStride=8;var stride=width;if(stride%minStride!=0){stride=(stride/minStride+1)*minStride}var format=YUVBuffer.format({width:width,height:height,chromaWidth:width/2,chromaHeight:height/2,});var new_size=height*stride;var new_y=new Uint8Array(new_size);var new_u=new Uint8Array(new_size/4);var new_v=new Uint8Array(new_size/4);for(var i=0;i<height;i++){var dst_y_i=i*stride;var src_y_i=(y+i)*frame.y.stride+x;new_y.set(frame.y.bytes.subarray(src_y_i,src_y_i+width),dst_y_i)}for(var i=0;i<height/2;i++){var dst_u_i=i*stride/2;var src_u_i=(y/2+i)*frame.u.stride+x/2;new_u.set(frame.u.bytes.subarray(src_u_i,src_u_i+width/2),dst_u_i);new_v.set(frame.v.bytes.subarray(src_u_i,src_u_i+width/2),dst_u_i)}var new_frame=YUVBuffer.frame(format,{bytes:new_y,stride:stride},{bytes:new_u,stride:stride/2},{bytes:new_v,stride:stride/2});return new_frame}function yuvFrame(y,u,v,width,height){var format=YUVBuffer.format({width:width,height:height,chromaWidth:width/2,chromaHeight:height/2,});y=new Uint8Array(y);u=new Uint8Array(u);v=new Uint8Array(v);var frame=YUVBuffer.frame(format,{bytes:y,stride:width},{bytes:u,stride:width/2},{bytes:v,stride:width/2});return frame}var YUV=function(canvas){var yuvCanvas=YUVCanvas.attach(canvas);function drawYUV(y,u,v,width,height){var htmlCanvas=canvas;var frame=yuvFrame(y,u,v,width,height);frame.format.displayWidth=htmlCanvas.width;frame.format.displayHeight=htmlCanvas.height;yuvCanvas.drawFrame(frame)}function drawFrame(frame){var htmlCanvas=canvas;frame.format.displayWidth=htmlCanvas.width;frame.format.displayHeight=htmlCanvas.height;yuvCanvas.drawFrame(frame)}return{draw:drawYUV,drawFrame:drawFrame,yuvCanvas:yuvCanvas}};function yuvCanvasPool(size){var yuvCanvases={};
for(var i=0;i<size;i++){var canvas=document.createElement("canvas");canvas.width=4;canvas.height=4;canvas.style="opacity: 0.0;";var yuvCanvas=YUV(canvas);var object={borrowed:false,htmlCanvas:canvas,yuvCanvas:yuvCanvas};canvas.pooled_object=object;yuvCanvases[i]=object}function borrow(){var borrowed=null;for(var i=0;i<size;i++){if(!yuvCanvases[i].borrowed){borrowed=yuvCanvases[i];break}}if(borrowed!=null){borrowed.borrowed=true;borrowed.htmlCanvas.style="opacity: 1.0;"}return borrowed}function release(borrowed){if(borrowed.pooled_object){borrowed=borrowed.pooled_object}borrowed.borrowed=false;borrowed.htmlCanvas.style="opacity: 0.0;"}return{borrow:borrow,release:release}}function bilinear_unrolled(pixels,x,y,width){var percentX=x-(x|0);var percentX1=1-percentX;var percentY=y-(y|0);var percentY1=1-percentY;var cx4=((x===~~x)?x:x+1|0)*4;var fx4=(x|0)*4;var cy4=((y===~~y)?y:y+1|0)*4;var fy4=(y|0)*4;var cy4wr=cy4*width;var fy4wr=fy4*width;var cy4wg=cy4wr+1;var fy4wg=fy4wr+1;var cy4wb=cy4wr+2;var fy4wb=fy4wr+2;var top,bottom,r,g,b;top=pixels[cy4wr+fx4]*percentX1+pixels[cy4wr+cx4]*percentX;bottom=pixels[fy4wr+fx4]*percentX1+pixels[fy4wr+cx4]*percentX;r=top*percentY+bottom*percentY1;top=pixels[cy4wg+fx4]*percentX1+pixels[cy4wg+cx4]*percentX;bottom=pixels[fy4wg+fx4]*percentX1+pixels[fy4wg+cx4]*percentX;g=top*percentY+bottom*percentY1;top=pixels[cy4wb+fx4]*percentX1+pixels[cy4wb+cx4]*percentX;bottom=pixels[fy4wb+fx4]*percentX1+pixels[fy4wb+cx4]*percentX;b=top*percentY+bottom*percentY1;return[r,g,b]}function rgb_resize(imageData,dst_width,dst_height){if(imageData.width==dst_width&&imageData.height==dst_height){return imageData}var dst_image=new ImageData(dst_width,dst_height);var ratio_x=1*imageData.width/dst_width;var ratio_y=1*imageData.height/dst_height;var mapped_x=0;var mapped_y=0;var rgb=0;var dst_i=0;for(var y=0;y<dst_height;y++){for(var x=0;x<dst_width;x++){mapped_x=x*ratio_x;mapped_y=y*ratio_y;rgb=bilinear_unrolled(imageData.data,mapped_x,mapped_y,imageData.width);dst_i=(y*dst_width+x)<<2;dst_image.data[dst_i]=rgb[0];dst_image.data[dst_i+1]=rgb[1];dst_image.data[dst_i+2]=rgb[2];dst_image.data[dst_i+3]=255}}return dst_image}function yuv_to_rgb(yuv_frame){var rgb_image=new ImageData(yuv_frame.format.width,yuv_frame.format.height);YCbCr.convertYCbCr(yuv_frame,rgb_image.data);return rgb_image}window.YUV={canvas:YUV,pool:yuvCanvasPool,crop_yuv:crop,yuv_to_rgb:yuv_to_rgb,rgb_resize:rgb_resize,YUVBuffer:YUVBuffer,frame:yuvFrame};function extractImageData(image){var canvas=document.createElement("canvas");canvas.width=image.naturalWidth,canvas.height=image.naturalHeight;var context=canvas.getContext("2d");context.drawImage(image,0,0);return context.getImageData(0,0,canvas.width,canvas.height)}function copyBrightnessToPlane(imageData,plane,width,height,multiplier){var clampedBytes=new Uint8ClampedArray(plane.bytes.buffer,plane.bytes.offset,plane.bytes.byteLength);for(var y=0;y<height;y++){for(var x=0;x<width;x++){clampedBytes[y*plane.stride+x]=imageData.data[y*width*4+x*4]*multiplier}}}function setupSources(){function setup(index){var image=document.getElementById(index+"plane"),fader=document.getElementById(index+"fader");function doit(){sourceData[index]=extractImageData(image);updateFrame()}if(image.naturalWidth){doit()}else{image.addEventListener("load",doit)}fader.addEventListener("input",function(){sourceFader[index]=fader.value;updateFrame()})}setup("y");setup("u");setup("v")}function updateFrame(){if(sourceData.y){copyBrightnessToPlane(sourceData.y,frame.y,format.width,format.height,sourceFader.y)}if(sourceData.u){copyBrightnessToPlane(sourceData.u,frame.u,format.chromaWidth,format.chromaHeight,sourceFader.u)}if(sourceData.v){copyBrightnessToPlane(sourceData.v,frame.v,format.chromaWidth,format.chromaHeight,sourceFader.v)}yuvCanvas.drawFrame(frame)}function setupBenchmark(){document.getElementById("benchmark").addEventListener("click",function(){var rounds=1000,start=Date.now();for(var i=0;i<rounds;i++){yuvCanvas.drawFrame(frame)}var delta=(Date.now()-start)/1000;var fps=rounds/delta;document.getElementById("fps").innerText=fps+"fps"})}})()},{"./../src/yuv-canvas.js":9,"yuv-buffer":3,"./YCbCr.js":7}],3:[function(require,module,exports){var YUVBuffer={validateDimension:function(dim){if(dim<=0||dim!==(dim|0)){throw"YUV plane dimensions must be a positive integer:"+dim}},validateOffset:function(dim){if(dim<0||dim!==(dim|0)){throw"YUV plane offsets must be a non-negative integer"}},format:function(fields){var width=fields.width,height=fields.height,chromaWidth=fields.chromaWidth||width,chromaHeight=fields.chromaHeight||height,cropLeft=fields.cropLeft||0,cropTop=fields.cropTop||0,cropWidth=fields.cropWidth||width-cropLeft,cropHeight=fields.cropHeight||height-cropTop,displayWidth=fields.displayWidth||cropWidth,displayHeight=fields.displayHeight||cropHeight;this.validateDimension(width);this.validateDimension(height);this.validateDimension(chromaWidth);this.validateDimension(chromaHeight);this.validateOffset(cropLeft);
this.validateOffset(cropTop);this.validateDimension(cropWidth);this.validateDimension(cropHeight);this.validateDimension(displayWidth);this.validateDimension(displayHeight);return{width:width,height:height,chromaWidth:chromaWidth,chromaHeight:chromaHeight,cropLeft:cropLeft,cropTop:cropTop,cropWidth:cropWidth,cropHeight:cropHeight,displayWidth:displayWidth,displayHeight:displayHeight}},allocPlane:function(stride,rows){YUVBuffer.validateDimension(stride);YUVBuffer.validateDimension(rows);return{bytes:new Uint8Array(stride*rows),stride:stride}},suitableStride:function(width){YUVBuffer.validateDimension(width);var alignment=4,remainder=width%alignment;if(remainder==0){return width}else{return width+(alignment-remainder)}},allocPlane:function(width,height,source,stride,offset){var size,bytes;this.validateDimension(width);this.validateDimension(height);offset=offset||0;stride=stride||this.suitableStride(width);this.validateDimension(stride);if(stride<width){throw"Invalid input stride for YUV plane; must be larger than width"}size=stride*height;if(source){if(source.length-offset<size){throw"Invalid input buffer for YUV plane; must be large enough for stride times height"}bytes=source.slice(offset,offset+size)}else{bytes=new Uint8Array(size);stride=stride||this.suitableStride(width)}return{bytes:bytes,stride:stride}},lumaPlane:function(format,source,stride,offset){return this.allocPlane(format.width,format.height,source,stride,offset)},chromaPlane:function(format,source,stride,offset){return this.allocPlane(format.chromaWidth,format.chromaHeight,source,stride,offset)},frame:function(format,y,u,v){y=y||this.lumaPlane(format);u=u||this.chromaPlane(format);v=v||this.chromaPlane(format);return{format:format,y:y,u:u,v:v}},copyPlane:function(plane){return{bytes:plane.bytes.slice(),stride:plane.stride}},copyFrame:function(frame){return{format:frame.format,y:this.copyPlane(frame.y),u:this.copyPlane(frame.u),v:this.copyPlane(frame.v)}},transferables:function(frame){return[frame.y.bytes.buffer,frame.u.bytes.buffer,frame.v.bytes.buffer]}};module.exports=YUVBuffer},{}],4:[function(require,module,exports){(function(){function FrameSink(canvas,options){throw new Error("abstract")}FrameSink.prototype.drawFrame=function(buffer){throw new Error("abstract")};FrameSink.prototype.clear=function(){throw new Error("abstract")};module.exports=FrameSink})()},{}],5:[function(require,module,exports){(function(){var FrameSink=require("./FrameSink.js"),YCbCr=require("./YCbCr.js");function SoftwareFrameSink(canvas){var self=this,ctx=canvas.getContext("2d"),imageData=null,resampleCanvas=null,resampleContext=null;function initImageData(width,height){imageData=ctx.createImageData(width,height);var data=imageData.data,pixelCount=width*height*4;for(var i=0;i<pixelCount;i+=4){data[i+3]=255}}function initResampleCanvas(cropWidth,cropHeight){resampleCanvas=document.createElement("canvas");resampleCanvas.width=cropWidth;resampleCanvas.height=cropHeight;resampleContext=resampleCanvas.getContext("2d")}self.drawFrame=function drawFrame(buffer){var format=buffer.format;if(canvas.width!==format.displayWidth||canvas.height!==format.displayHeight){canvas.width=format.displayWidth;canvas.height=format.displayHeight}if(imageData===null||imageData.width!=format.width||imageData.height!=format.height){initImageData(format.width,format.height)}YCbCr.convertYCbCr(buffer,imageData.data);var resample=(format.cropWidth!=format.displayWidth||format.cropHeight!=format.displayHeight);var drawContext;if(resample){if(!resampleCanvas){initResampleCanvas(format.cropWidth,format.cropHeight)}drawContext=resampleContext}else{drawContext=ctx}drawContext.putImageData(imageData,0,0,format.cropLeft,format.cropTop,format.cropWidth,format.cropHeight);if(resample){ctx.drawImage(resampleCanvas,0,0,format.displayWidth,format.displayHeight)}};self.clear=function(){ctx.clearRect(0,0,canvas.width,canvas.height)};return self}SoftwareFrameSink.prototype=Object.create(FrameSink.prototype);module.exports=SoftwareFrameSink})()},{"./FrameSink.js":4,"./YCbCr.js":7}],6:[function(require,module,exports){(function(){var FrameSink=require("./FrameSink.js"),shaders=require("../build/shaders.js");function WebGLFrameSink(canvas){var self=this,gl=canvas.getContext("webgl")||canvas.getContext("experimental-webgl"),debug=false;if(gl===null){throw new Error("WebGL unavailable")}function checkError(){if(debug){err=gl.getError();if(err!==0){throw new Error("GL error "+err)}}}function compileShader(type,source){var shader=gl.createShader(type);gl.shaderSource(shader,source);gl.compileShader(shader);if(!gl.getShaderParameter(shader,gl.COMPILE_STATUS)){var err=gl.getShaderInfoLog(shader);gl.deleteShader(shader);throw new Error("GL shader compilation for "+type+" failed: "+err)}return shader}var program,unpackProgram,err;var rectangle=new Float32Array([-1,-1,+1,-1,-1,+1,-1,+1,+1,-1,+1,+1]);var textures={};var framebuffers={};var stripes={};var buf,positionLocation,unpackPositionLocation;var unpackTexturePositionBuffer,unpackTexturePositionLocation;
var stripeLocation,unpackTextureLocation;var lumaPositionBuffer,lumaPositionLocation;var chromaPositionBuffer,chromaPositionLocation;function createOrReuseTexture(name){if(!textures[name]){textures[name]=gl.createTexture()}return textures[name]}function uploadTexture(name,width,height,data){var texture=createOrReuseTexture(name);gl.activeTexture(gl.TEXTURE0);if(WebGLFrameSink.stripe){var uploadTemp=!textures[name+"_temp"];var tempTexture=createOrReuseTexture(name+"_temp");gl.bindTexture(gl.TEXTURE_2D,tempTexture);if(uploadTemp){gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,gl.CLAMP_TO_EDGE);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_T,gl.CLAMP_TO_EDGE);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,gl.NEAREST);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,gl.NEAREST);gl.texImage2D(gl.TEXTURE_2D,0,gl.RGBA,width/4,height,0,gl.RGBA,gl.UNSIGNED_BYTE,data)}else{gl.texSubImage2D(gl.TEXTURE_2D,0,0,0,width/4,height,gl.RGBA,gl.UNSIGNED_BYTE,data)}var stripeTexture=textures[name+"_stripe"];var uploadStripe=!stripeTexture;if(uploadStripe){stripeTexture=createOrReuseTexture(name+"_stripe")}gl.bindTexture(gl.TEXTURE_2D,stripeTexture);if(uploadStripe){gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,gl.CLAMP_TO_EDGE);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_T,gl.CLAMP_TO_EDGE);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,gl.NEAREST);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,gl.NEAREST);gl.texImage2D(gl.TEXTURE_2D,0,gl.RGBA,width,1,0,gl.RGBA,gl.UNSIGNED_BYTE,buildStripe(width,1))}}else{gl.bindTexture(gl.TEXTURE_2D,texture);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,gl.CLAMP_TO_EDGE);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_T,gl.CLAMP_TO_EDGE);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,gl.LINEAR);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,gl.LINEAR);gl.texImage2D(gl.TEXTURE_2D,0,gl.LUMINANCE,width,height,0,gl.LUMINANCE,gl.UNSIGNED_BYTE,data)}}function unpackTexture(name,width,height){var texture=textures[name];gl.useProgram(unpackProgram);var fb=framebuffers[name];if(!fb){gl.activeTexture(gl.TEXTURE0);gl.bindTexture(gl.TEXTURE_2D,texture);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,gl.CLAMP_TO_EDGE);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_T,gl.CLAMP_TO_EDGE);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,gl.LINEAR);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,gl.LINEAR);gl.texImage2D(gl.TEXTURE_2D,0,gl.RGBA,width,height,0,gl.RGBA,gl.UNSIGNED_BYTE,null);fb=framebuffers[name]=gl.createFramebuffer()}gl.bindFramebuffer(gl.FRAMEBUFFER,fb);gl.framebufferTexture2D(gl.FRAMEBUFFER,gl.COLOR_ATTACHMENT0,gl.TEXTURE_2D,texture,0);var tempTexture=textures[name+"_temp"];gl.activeTexture(gl.TEXTURE1);gl.bindTexture(gl.TEXTURE_2D,tempTexture);gl.uniform1i(unpackTextureLocation,1);var stripeTexture=textures[name+"_stripe"];gl.activeTexture(gl.TEXTURE2);gl.bindTexture(gl.TEXTURE_2D,stripeTexture);gl.uniform1i(stripeLocation,2);gl.bindBuffer(gl.ARRAY_BUFFER,buf);gl.enableVertexAttribArray(positionLocation);gl.vertexAttribPointer(positionLocation,2,gl.FLOAT,false,0,0);gl.bindBuffer(gl.ARRAY_BUFFER,unpackTexturePositionBuffer);gl.enableVertexAttribArray(unpackTexturePositionLocation);gl.vertexAttribPointer(unpackTexturePositionLocation,2,gl.FLOAT,false,0,0);gl.viewport(0,0,width,height);gl.drawArrays(gl.TRIANGLES,0,rectangle.length/2);gl.bindFramebuffer(gl.FRAMEBUFFER,null)}function attachTexture(name,register,index){gl.activeTexture(register);gl.bindTexture(gl.TEXTURE_2D,textures[name]);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,gl.CLAMP_TO_EDGE);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_T,gl.CLAMP_TO_EDGE);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,gl.LINEAR);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,gl.LINEAR);gl.uniform1i(gl.getUniformLocation(program,name),index)}function buildStripe(width){if(stripes[width]){return stripes[width]}var len=width,out=new Uint32Array(len);for(var i=0;i<len;i+=4){out[i]=255;out[i+1]=65280;out[i+2]=16711680;out[i+3]=4278190080}return stripes[width]=new Uint8Array(out.buffer)}function initProgram(vertexShaderSource,fragmentShaderSource){var vertexShader=compileShader(gl.VERTEX_SHADER,vertexShaderSource);var fragmentShader=compileShader(gl.FRAGMENT_SHADER,fragmentShaderSource);var program=gl.createProgram();gl.attachShader(program,vertexShader);gl.attachShader(program,fragmentShader);gl.linkProgram(program);if(!gl.getProgramParameter(program,gl.LINK_STATUS)){var err=gl.getProgramInfoLog(program);gl.deleteProgram(program);throw new Error("GL program linking failed: "+err)}return program}function init(){if(WebGLFrameSink.stripe){unpackProgram=initProgram(shaders.vertexStripe,shaders.fragmentStripe);unpackPositionLocation=gl.getAttribLocation(unpackProgram,"aPosition");unpackTexturePositionBuffer=gl.createBuffer();var textureRectangle=new Float32Array([0,0,1,0,0,1,0,1,1,0,1,1]);gl.bindBuffer(gl.ARRAY_BUFFER,unpackTexturePositionBuffer);gl.bufferData(gl.ARRAY_BUFFER,textureRectangle,gl.STATIC_DRAW);
unpackTexturePositionLocation=gl.getAttribLocation(unpackProgram,"aTexturePosition");stripeLocation=gl.getUniformLocation(unpackProgram,"uStripe");unpackTextureLocation=gl.getUniformLocation(unpackProgram,"uTexture")}program=initProgram(shaders.vertex,shaders.fragment);buf=gl.createBuffer();gl.bindBuffer(gl.ARRAY_BUFFER,buf);gl.bufferData(gl.ARRAY_BUFFER,rectangle,gl.STATIC_DRAW);positionLocation=gl.getAttribLocation(program,"aPosition");lumaPositionBuffer=gl.createBuffer();lumaPositionLocation=gl.getAttribLocation(program,"aLumaPosition");chromaPositionBuffer=gl.createBuffer();chromaPositionLocation=gl.getAttribLocation(program,"aChromaPosition")}self.drawFrame=function(buffer){var format=buffer.format;var formatUpdate=(!program||canvas.width!==format.displayWidth||canvas.height!==format.displayHeight);if(formatUpdate){canvas.width=format.displayWidth;canvas.height=format.displayHeight;self.clear()}if(!program){init()}if(formatUpdate){function setupTexturePosition(buffer,location,texWidth){var textureX0=format.cropLeft/texWidth;var textureX1=(format.cropLeft+format.cropWidth)/texWidth;var textureY0=(format.cropTop+format.cropHeight)/format.height;var textureY1=format.cropTop/format.height;var textureRectangle=new Float32Array([textureX0,textureY0,textureX1,textureY0,textureX0,textureY1,textureX0,textureY1,textureX1,textureY0,textureX1,textureY1]);gl.bindBuffer(gl.ARRAY_BUFFER,buffer);gl.bufferData(gl.ARRAY_BUFFER,textureRectangle,gl.STATIC_DRAW)}setupTexturePosition(lumaPositionBuffer,lumaPositionLocation,buffer.y.stride);setupTexturePosition(chromaPositionBuffer,chromaPositionLocation,buffer.u.stride*format.width/format.chromaWidth)}uploadTexture("uTextureY",buffer.y.stride,format.height,buffer.y.bytes);uploadTexture("uTextureCb",buffer.u.stride,format.chromaHeight,buffer.u.bytes);uploadTexture("uTextureCr",buffer.v.stride,format.chromaHeight,buffer.v.bytes);if(WebGLFrameSink.stripe){unpackTexture("uTextureY",buffer.y.stride,format.height);unpackTexture("uTextureCb",buffer.u.stride,format.chromaHeight);unpackTexture("uTextureCr",buffer.v.stride,format.chromaHeight)}gl.useProgram(program);gl.viewport(0,0,canvas.width,canvas.height);attachTexture("uTextureY",gl.TEXTURE0,0);attachTexture("uTextureCb",gl.TEXTURE1,1);attachTexture("uTextureCr",gl.TEXTURE2,2);gl.bindBuffer(gl.ARRAY_BUFFER,buf);gl.enableVertexAttribArray(positionLocation);gl.vertexAttribPointer(positionLocation,2,gl.FLOAT,false,0,0);gl.bindBuffer(gl.ARRAY_BUFFER,lumaPositionBuffer);gl.enableVertexAttribArray(lumaPositionLocation);gl.vertexAttribPointer(lumaPositionLocation,2,gl.FLOAT,false,0,0);gl.bindBuffer(gl.ARRAY_BUFFER,chromaPositionBuffer);gl.enableVertexAttribArray(chromaPositionLocation);gl.vertexAttribPointer(chromaPositionLocation,2,gl.FLOAT,false,0,0);gl.drawArrays(gl.TRIANGLES,0,rectangle.length/2)};self.clear=function(){gl.viewport(0,0,canvas.width,canvas.height);gl.clearColor(0,0,0,0);gl.clear(gl.COLOR_BUFFER_BIT)};self.clear();return self}WebGLFrameSink.stripe=(function(){if(navigator.userAgent.indexOf("Windows")!==-1){return true}return false})();WebGLFrameSink.isAvailable=function(){var canvas=document.createElement("canvas"),gl;canvas.width=1;canvas.height=1;var options={alpha:false,depth:false,stencil:false,antialias:false,preferLowPowerToHighPerformance:true};try{gl=canvas.getContext("webgl",options)||canvas.getContext("experimental-webgl",options)}catch(e){return false}if(gl){var register=gl.TEXTURE0,width=4,height=4,texture=gl.createTexture(),data=new Uint8Array(width*height),texWidth=WebGLFrameSink.stripe?(width/4):width,format=WebGLFrameSink.stripe?gl.RGBA:gl.LUMINANCE,filter=WebGLFrameSink.stripe?gl.NEAREST:gl.LINEAR;gl.activeTexture(register);gl.bindTexture(gl.TEXTURE_2D,texture);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,gl.CLAMP_TO_EDGE);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_T,gl.CLAMP_TO_EDGE);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,filter);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,filter);gl.texImage2D(gl.TEXTURE_2D,0,format,texWidth,height,0,format,gl.UNSIGNED_BYTE,data);var err=gl.getError();if(err){return false}else{return true}}else{return false}};WebGLFrameSink.prototype=Object.create(FrameSink.prototype);module.exports=WebGLFrameSink})()},{"../build/shaders.js":1,"./FrameSink.js":4}],7:[function(require,module,exports){(function(){var depower=require("./depower.js");function convertYCbCr(buffer,output){var width=buffer.format.width,height=buffer.format.height,hdec=depower(buffer.format.width/buffer.format.chromaWidth),vdec=depower(buffer.format.height/buffer.format.chromaHeight),bytesY=buffer.y.bytes,bytesCb=buffer.u.bytes,bytesCr=buffer.v.bytes,strideY=buffer.y.stride,strideCb=buffer.u.stride,strideCr=buffer.v.stride,outStride=4*width,YPtr=0,Y0Ptr=0,Y1Ptr=0,CbPtr=0,CrPtr=0,outPtr=0,outPtr0=0,outPtr1=0,colorCb=0,colorCr=0,multY=0,multCrR=0,multCbCrG=0,multCbB=0,x=0,y=0,xdec=0,ydec=0;if(hdec==1&&vdec==1){outPtr0=0;outPtr1=outStride;ydec=0;for(y=0;y<height;y+=2){Y0Ptr=y*strideY;
Y1Ptr=Y0Ptr+strideY;CbPtr=ydec*strideCb;CrPtr=ydec*strideCr;for(x=0;x<width;x+=2){colorCb=bytesCb[CbPtr++];colorCr=bytesCr[CrPtr++];multCrR=(409*colorCr)-57088;multCbCrG=(100*colorCb)+(208*colorCr)-34816;multCbB=(516*colorCb)-70912;multY=(298*bytesY[Y0Ptr++]);output[outPtr0++]=(multY+multCrR)>>8;output[outPtr0++]=(multY-multCbCrG)>>8;output[outPtr0++]=(multY+multCbB)>>8;outPtr0++;multY=(298*bytesY[Y0Ptr++]);output[outPtr0++]=(multY+multCrR)>>8;output[outPtr0++]=(multY-multCbCrG)>>8;output[outPtr0++]=(multY+multCbB)>>8;outPtr0++;multY=(298*bytesY[Y1Ptr++]);output[outPtr1++]=(multY+multCrR)>>8;output[outPtr1++]=(multY-multCbCrG)>>8;output[outPtr1++]=(multY+multCbB)>>8;outPtr1++;multY=(298*bytesY[Y1Ptr++]);output[outPtr1++]=(multY+multCrR)>>8;output[outPtr1++]=(multY-multCbCrG)>>8;output[outPtr1++]=(multY+multCbB)>>8;outPtr1++}outPtr0+=outStride;outPtr1+=outStride;ydec++}}else{outPtr=0;for(y=0;y<height;y++){xdec=0;ydec=y>>vdec;YPtr=y*strideY;CbPtr=ydec*strideCb;CrPtr=ydec*strideCr;for(x=0;x<width;x++){xdec=x>>hdec;colorCb=bytesCb[CbPtr+xdec];colorCr=bytesCr[CrPtr+xdec];multCrR=(409*colorCr)-57088;multCbCrG=(100*colorCb)+(208*colorCr)-34816;multCbB=(516*colorCb)-70912;multY=298*bytesY[YPtr++];output[outPtr++]=(multY+multCrR)>>8;output[outPtr++]=(multY-multCbCrG)>>8;output[outPtr++]=(multY+multCbB)>>8;outPtr++}}}}module.exports={convertYCbCr:convertYCbCr}})()},{"./depower.js":8}],8:[function(require,module,exports){(function(){function depower(ratio){var shiftCount=0,n=ratio>>1;while(n!=0){n=n>>1;shiftCount++}if(ratio!==(1<<shiftCount)){throw"chroma plane dimensions must be power of 2 ratio to luma plane dimensions; got "+ratio}return shiftCount}module.exports=depower})()},{}],9:[function(require,module,exports){(function(){var FrameSink=require("./FrameSink.js"),SoftwareFrameSink=require("./SoftwareFrameSink.js"),WebGLFrameSink=require("./WebGLFrameSink.js");var YUVCanvas={FrameSink:FrameSink,SoftwareFrameSink:SoftwareFrameSink,WebGLFrameSink:WebGLFrameSink,attach:function(canvas,options){options=options||{};var webGL=("webGL" in options)?options.webGL:WebGLFrameSink.isAvailable();if(webGL){return new WebGLFrameSink(canvas,options)}else{return new SoftwareFrameSink(canvas,options)}}};module.exports=YUVCanvas})()},{"./FrameSink.js":4,"./SoftwareFrameSink.js":5,"./WebGLFrameSink.js":6}]},{},[2]);