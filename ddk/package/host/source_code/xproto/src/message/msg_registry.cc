/*!
 * -------------------------------------------
 * Copyright (c) 2019, Horizon Robotics, Inc.
 * All rights reserved.
 * \File     msg_registry.h
 * \Author Songshan Gong
 * \Mail     songshan.gong@horizon.ai
 * \Version  1.0.0.0
 * \Date     2019-07-30
 * \Brief    xplugin message registry
 * \DO NOT MODIFY THIS COMMENT, \
 * \WHICH IS AUTO GENERATED BY EDITOR
 * -------------------------------------------
 */
#include "xproto/message/msg_registry.h"

#include <map>
#include <mutex>
#include <string>
#include <iostream>

#include "hobotlog/hobotlog.hpp"

namespace xproto {

XPluginMsgTypeHandle XPluginMsgRegistry::Register(const std::string &name) {
  std::lock_guard<std::mutex> lck(mutex_);
  if (fmap_.count(name)) {
    LOGF << "XPlugin msg type:" << name << " already registered!";
    return XPLUGIN_INVALID_MSG_TYPE;
  }
  fmap_[name] = counter_++;
  return fmap_[name];
}

XPluginMsgTypeHandle XPluginMsgRegistry::Get(const std::string &name) {
  std::lock_guard<std::mutex> lck(mutex_);
  if (fmap_.count(name)) {
    return fmap_.at(name);
  } else {
    return XPLUGIN_INVALID_MSG_TYPE;
  }
}
XPluginMsgRegistry &XPluginMsgRegistry::Instance() {
  static XPluginMsgRegistry inst;
  return inst;
}

XPluginMsgRegistry::XPluginMsgRegistry() {}
XPluginMsgRegistry::~XPluginMsgRegistry() {}

}  // namespace xproto
